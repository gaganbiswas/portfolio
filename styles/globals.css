@tailwind base;
@tailwind components;
@tailwind utilities;

h1,
h2,
h3,
h4,
p,
span,
li {
  cursor: default;
}

.burger {
  transition: opacity 300ms ease;
  border: 0;
  background: transparent;
  width: 40px;
  height: 40px;
  position: relative;
}

.burger svg {
  transform: translate(-50%, -50%) scale(1);
  top: 50%;
  left: 50%;
  opacity: 1;
  transition: opacity 300ms ease, transform 300ms ease;
}

.burger svg[data-hide='true'] {
  opacity: 0;
  transform: translate(-50%, -50%) scale(0);
}

.menu {
  padding: 24px 28px 0 12px;
  margin: 0;
  width: 100%;
  height: 100vh;
  z-index: 1000;
  opacity: 0;
  left: 0;
  transition: opacity 300ms ease, transform 300ms ease;
}

.menu li {
  transform: translateX(-16px);
  opacity: 0;
  transition: opacity 300ms ease, transform 300ms ease, width 300ms ease,
    border-color 300ms ease;
  width: 0px;
  white-space: nowrap;
}

.menuRendered {
  opacity: 1;
}

.menuRendered li {
  @apply w-full border-gray-200 dark:border-gray-600;
  transform: translateX(0);
  opacity: 1;
}

.menu > * + * {
  margin-top: 16px;
}

@keyframes grow {
  0% {
    height: 0px;
  }
  100% {
    height: 24px;
  }
}

.text-clamp {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
}

.prose .anchor {
  @apply invisible absolute no-underline;

  margin-left: -1em;
  padding-right: 0.5em;
  width: 80%;
  max-width: 700px;
  cursor: pointer;
}

.anchor:hover {
  @apply visible;
}

.prose a {
  @apply transition-all;
}

.prose .anchor:after {
  @apply text-gray-300 dark:text-gray-700;
  content: '#';
}

.prose *:hover > .anchor {
  @apply visible;
}

.prose pre {
  @apply border border-gray-200 bg-gray-50 dark:border-gray-700 dark:bg-gray-900;
}

.prose code {
  @apply rounded-lg border border-gray-100 bg-gray-100 px-1 py-0.5 text-gray-800 dark:border-gray-800 dark:bg-gray-900 dark:text-gray-200;
}

.prose pre code {
  @apply p-0 text-gray-800 dark:text-gray-200;
  border: initial;
}

.prose img {
  /* Don't apply styles to next/image */
  @apply m-0;
}

.prose > :first-child {
  /* Override removing top margin, causing layout shift */
  margin-top: 1.25em !important;
  margin-bottom: 1.25em !important;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  @apply text-gray-700 dark:text-gray-300;
}

.token.punctuation {
  @apply text-gray-700 dark:text-gray-300;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  @apply text-green-500;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  @apply text-purple-500;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  @apply text-yellow-500;
}

.token.atrule,
.token.attr-value,
.token.keyword {
  @apply text-blue-500;
}

.token.function,
.token.class-name {
  @apply text-pink-500;
}

.token.regex,
.token.important,
.token.variable {
  @apply text-yellow-500;
}

code[class*='language-'],
pre[class*='language-'] {
  @apply text-gray-800 dark:text-gray-50;
}

pre::-webkit-scrollbar {
  display: none;
}

pre {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

.rehype-code-title {
  @apply rounded-t-lg border border-b-0 border-gray-200 bg-gray-200 px-5 py-3 font-mono text-sm font-bold text-gray-800 dark:border-gray-700 dark:bg-gray-800 dark:text-gray-200;
}

.rehype-code-title + pre {
  @apply mt-0 rounded-t-none;
}

.highlight-line {
  @apply -mx-4 block border-l-4 border-blue-500 bg-gray-100 px-4 dark:bg-gray-800;
}

/* Remove Safari input shadow on mobile */
input[type='text'],
input[type='email'] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.metric-card > a {
  @apply no-underline;
}

.metric-card > p {
  @apply my-2;
}

.step > h3 {
  @apply my-0;
}

.prose .tweet a {
  text-decoration: inherit;
  font-weight: inherit;
}

table {
  display: block;
  max-width: fit-content;
  overflow-x: auto;
  white-space: nowrap;
}

.prose .callout > p {
  margin: 0 !important;
}
